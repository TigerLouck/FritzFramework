%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_PrefabParentObject: {fileID: 0}
  m_PrefabInternal: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: fcf7219bab7fe46a1ad266029b2fee19, type: 3}
  m_Name: Readme
  m_EditorClassIdentifier: 
  icon: {fileID: 2800000, guid: d7ea06d0b17c1f2449da59482578de9c, type: 3}
  title: Fritz Framework
  sections:
  - heading: 'Fritz Interaction Framework for SteamVR '
    text: "This package contains a moderately lightweight, robust VR interaction framework for transmitting input events in a spatialized but flexible manner, intended to sit on top of the steamVR input layer.\n\nThis package includes scripts linking event emitters for interactable objects to the steamVR input layer, and scripts demonstrating the use of this system in a few common use-cases. It also includes several prefabs to demonstrate the configuration of these kinds of systems, and steamvr input binding files to be copied (to streamingassets/steamvr).\n\nBefore Attempting to run this, make sure you have the OpenXR package and SteamVR+its unity store package installed (instructions for how to do that are elsewhere). Run the steamvr input's \"save and generate\" function, then copy over both binding files to streaming assets and reopen the steamvr input window. Once that is done, everything else should be drag-and-drop."
    linkText: 
    url: 
  loadedLayout: 1
